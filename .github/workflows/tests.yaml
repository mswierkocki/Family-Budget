name: Test Workflow with local db
run-name: Tests by @${{ github.actor }}
on:
  # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
  workflow_call:
    inputs:
      break_on_linter:
        required: false
        type: boolean
        default: True
      run_check:
        description: "Whether to run check"
        required: false
        type: boolean
        default: false   
      run_on_db:
        description: "Run tests using posgress"
        required: false
        type: boolean
        default: false 
  workflow_dispatch:
    inputs:
      break_on_linter:
        description: "Set to true to break script on linter"
        required: false
        type: boolean
        default: True        
      run_check:
        description: "Whether to run check"
        required: false
        type: boolean
        default: false   
      run_on_db:
        description: "Run tests using posgress"
        required: false
        type: boolean
        default: false 

  push:
    branches: [ test*/** ]
    # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
jobs:
  test_with_sqlite:
    name: "Test with local db"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout v4
        uses: actions/checkout@v3
      - name: Setup python3.9 with cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - name: Install base requirements
        run: pip install -r requirements.txt
      - name: Run Flake
        run: ./run_flake.sh ${{ inputs.break_on_linter }}
      - name: Run migrations
        run: python manage.py migrate
      - name: Run Django Tests
        run: python manage.py test --noinput
      - name: Run check
        run:  '[[ "${{ inputs.run_check }}" = true ]] && python manage.py check || true'
  test_with_postgress:
    if: ${{ github.event.inputs.run_on_db == 'true' }}
    name: "Test with postgress"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - name: Checkout v4
        uses: actions/checkout@v3
      - name: Setup python3.9 with cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - name: Install base requirements
        run: pip install -r requirements.txt
      - name: Set env for postgres db
        run: echo "{APP_ENV}=github" >> $GITHUB_ENV
      - name: Run Flake
        run: ./run_flake.sh ${{ inputs.break_on_linter }}
      - name: Run migrations
        run: python manage.py migrate
      - name: Run Django Tests
        run: python manage.py test --noinput
      - name: Run check
        run:  '[[ "${{ inputs.run_check }}" = true ]] && python manage.py check || true'

# continue on error:
# https://docs.github.com/en/actions/learn-github-actions/expressions#example-returning-a-json-data-type


# https://github.com/actions/cache/blob/main/examples.md#python---pip
#- name: Get pip cache dir
#  id: pip-cache
#  run: |
#    echo "::set-output name=dir::$(pip cache dir)"
#
#- name: pip cache
#  uses: actions/cache@v3
#  with:
#    path: ${{ steps.pip-cache.outputs.dir }}
#    key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#    restore-keys: |
#      ${{ runner.os }}-pip-